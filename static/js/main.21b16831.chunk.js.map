{"version":3,"sources":["redux/reducers/reducers.js","redux/reducers/rootReducer.js","redux/store.js","index.js","redux/actions/types.js"],"names":["initialState","isLoading","error","data","reducer","state","action","type","GET_WEATHER_REQUEST","GET_WEATHER_SUCCESS","payload","GET_WEATHER_FAIL","rootReducer","combineReducers","todo","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","App","React","lazy","loader","document","querySelector","showLoader","classList","remove","hideLoader","add","setTimeout","ReactDOM","render","StrictMode","fallback","className","getElementById"],"mappings":"sOAQMA,EAAe,CACjBC,UAAW,KACXC,MAAO,KACPC,KAAM,MAiCKC,EA9BC,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC9C,OAAQA,EAAOC,MACX,KAAKC,IACD,OAAO,2BACAH,GADP,IAEIJ,WAAW,EACXC,MAAO,KACPC,KAAM,KAGd,KAAKM,IACD,OAAO,2BACAJ,GADP,IAEIJ,WAAW,EACXC,OAAO,EACPC,KAAMG,EAAOI,UAGrB,KAAKC,IACD,OAAO,2BACAN,GADP,IAEIJ,WAAW,EACXC,MAAOI,EAAOI,QACdP,KAAM,KAGd,QAAS,OAAOE,ICjCTO,EAJKC,YAAgB,CAChCC,KAAOV,ICELW,EAAa,CAACC,KACdC,EAAmBC,OAAOC,sCAAwCC,IAKzDC,EAJDC,YAAYV,EAAaK,EAC9BM,IAAe,WAAf,EAAmBR,K,OCJtBS,EAAMC,IAAMC,MAAK,kBAAM,uDAEvBC,EAASC,SAASC,cAAc,WAChCC,EAAa,kBAAMH,EAAOI,UAAUC,OAAO,iBAC3CC,EAAa,kBAAMN,EAAOI,UAAUG,IAAI,iBAC9CC,YAAW,kBACTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUjB,MAAOA,EAAjB,SACE,cAAC,WAAD,CAAUkB,SAAU,qBAAKC,UAAU,WAAnC,SACE,cAAChB,EAAD,CACES,WAAYA,EACZH,WAAYA,UAKpBF,SAASa,eAAe,WACvB,M,+BCvBL,sGAAO,IAAMjC,EAAsB,sBACtBC,EAAsB,sBACtBE,EAAmB,qB","file":"static/js/main.21b16831.chunk.js","sourcesContent":["import {\r\n    GET_WEATHER_REQUEST,\r\n    GET_WEATHER_SUCCESS,\r\n    GET_WEATHER_FAIL,\r\n \r\n} from \"../actions/types\";\r\n\r\n \r\nconst initialState = {    \r\n    isLoading: null,\r\n    error: null,\r\n    data: null    \r\n};\r\n \r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_WEATHER_REQUEST:\r\n            return {\r\n                ...state,               \r\n                isLoading: true,\r\n                error: null,\r\n                data: []\r\n                \r\n            }\r\n        case GET_WEATHER_SUCCESS:\r\n            return {\r\n                ...state,               \r\n                isLoading: false,\r\n                error: false,\r\n                data: action.payload\r\n                \r\n            }\r\n        case GET_WEATHER_FAIL:\r\n            return {\r\n                ...state,                \r\n                isLoading: false,\r\n                error: action.payload,\r\n                data: []\r\n                \r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n \r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    todo : reducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\n//import reducer from './reducers/reducers';\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './reducers/rootReducer';\r\n \r\nconst middleware = [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n         applyMiddleware(...middleware)\r\n));\r\n \r\nexport default store;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\nconst App = React.lazy(() => import('./App')); // Lazy-loaded\n\nconst loader = document.querySelector('.loader');\nconst showLoader = () => loader.classList.remove('loader--hide');\nconst hideLoader = () => loader.classList.add('loader--hide');\nsetTimeout(() => \n  ReactDOM.render(\n    <React.StrictMode>    \n      <Provider store={store}>\n        <Suspense fallback={<div className=\"loader\"></div>}>\n          <App\n            hideLoader={hideLoader}\n            showLoader={showLoader} \n          />\n        </Suspense>      \n      </Provider>    \n    </React.StrictMode>,\n    document.getElementById('root')\n  ), 1000);\n\n","export const GET_WEATHER_REQUEST = \"GET_WEATHER_REQUEST\";\r\nexport const GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\";\r\nexport const GET_WEATHER_FAIL = \"GET_WEATHER_FAIL\";"],"sourceRoot":""}